{"version":3,"sources":["assets/filters.js"],"names":["filter","searchText","inputArray","x","i","length","j","style","display","textContent","toLowerCase","includes","filterSearch","input","document","getElementById","inputVal","value","trim","split","$","hide","filterCheckbox","div","li","getElementsByTagName","toUpperCase","checkbox","innerHTML","replace","indexOf","searchSubtopics","showCheckbox","uncheckAll","prop","empty","viewChange","classList","toggle","click","boxes","id","$pill","append","onkeyup","onclick"],"mappings":";AAAA,IAAIA,EAAS,GAOb,SAASC,EAAWC,EAAYC,GACzBC,IAAAA,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAC5BE,IAAAA,EAAI,EAAGA,EAAIH,EAAEE,OAAQC,IAAK,CAC7BH,EAAEG,GAAGC,MAAMC,QAAU,OACVL,EAAEG,GAAGG,YAAYC,cACnBC,SAAST,EAAWE,MAC3BD,EAAEG,GAAGC,MAAMC,QAAU,iBAoC7B,SAASI,IACHC,IAAAA,EAAQC,SAASC,eAAe,eACpCC,SAAWH,EAAMI,MACjBD,SAAWA,SAASN,cAAcQ,OAClChB,WAAac,SAASG,MAAM,KACxBnB,GACFoB,EAAE,SAASC,OACXpB,EAAWC,WAAYkB,EAAEpB,KAEzBC,EAAWC,WAAYkB,EAAE,UAO7B,SAASE,EAAeC,EAAKV,GAGtBT,IAFLoB,GAAKD,EAAIE,qBAAqB,MAC9BzB,EAASa,EAAMI,MAAMS,cAChBtB,EAAI,EAAGA,EAAIoB,GAAGnB,OAAQD,IACzBuB,SAAWH,GAAGpB,GAAGwB,UAAUC,QAAQ,OAAQ,IACvCF,SAASD,cAAcI,QAAQ9B,IAAW,EAC5CwB,GAAGpB,GAAGG,MAAMC,QAAU,GAEtBgB,GAAGpB,GAAGG,MAAMC,QAAU,OAU5B,SAASuB,IACPlB,MAAQC,SAASC,eAAe,eAChCQ,IAAMT,SAASC,eAAe,aAC9BO,EAAeC,IAAKV,OAMtB,SAASmB,EAAaT,GAEfnB,IADLoB,GAAKD,EAAIE,qBAAqB,MACzBrB,EAAI,EAAGA,EAAIoB,GAAGnB,OAAQD,IACzBoB,GAAGpB,GAAGG,MAAMC,QAAU,GAS1B,SAASyB,IACPb,EAAE,kCAAkCc,KAAK,WAAW,GACpDlC,EAAS,GACToB,EAAE,gBAAgBe,QAClBZ,IAAMT,SAASC,eAAe,aAC9BD,SAASC,eAAe,eAAeE,MAAQ,GAC/Ce,EAAaT,KACbT,SAASC,eAAe,eAAeE,MAAQ,GAC/CL,IAOF,SAASwB,IACOtB,SAASC,eAAe,SAC9BsB,UAAUC,OAAO,gBAhG3BlB,EAAE,cAAcmB,MAAM,WACpBvC,EAAS,GACToB,EAAE,gBAAgBe,QAEb,IADDK,IAAAA,EAAQpB,EAAE,2BACLhB,EAAI,EAAGA,EAAIoC,EAAMnC,OAAQD,IAAK,CACrCJ,GAAU,IAAMwC,EAAMpC,GAAGqC,GACrBC,IAAAA,EACF,8DACAF,EAAMpC,GAAGqC,GACT,KACAD,EAAMpC,GAAGa,MACT,UACFG,EAAE,gBAAgBuB,OAAOD,GAE3B9B,MASFE,SAASC,eAAe,eAAe6B,QAAUhC,EAkCjDE,SAASC,eAAe,eAAe6B,QAAUb,EAqBjDjB,SAASC,eAAe,cAAc8B,QAAUZ,EAehDnB,SAASC,eAAe,cAAc8B,QAAUT","file":"filters.549da4bb.js","sourceRoot":"..","sourcesContent":["var filter = \"\";\n\n/**\n * Searches text in each card by iterating through words in \n * inputArray. Converts each card to text and shows \n * card if any word in inputArray is present in card. \n */\nfunction searchText(inputArray, x) {\n  for (i = 0; i < inputArray.length; i++) {\n    for (j = 0; j < x.length; j++) {\n      x[j].style.display = \"none\";\n      var text = x[j].textContent.toLowerCase();\n      if (text.includes(inputArray[i])) {\n        x[j].style.display = \"inline-block\";\n      }\n    }\n  }\n}\n\n/**\n * Whenever btn-group is clicked, writes into local variable filter\n * all the filters that are selected to use in filterSearch function. \n * Shows the selected filters as pills below the hero and \n * calls on filterSearch function to refilter surveys. \n */\n$(\".btn-group\").click(function () {\n  filter = \"\";\n  $(\"#filterPills\").empty(); // clears filter pills from screen\n  var boxes = $(\".filterCheckbox:checked\");\n  for (var i = 0; i < boxes.length; i++) {\n    filter += \".\" + boxes[i].id; // adds a id of a checkbox to the filter\n    var $pill =\n      \"<span href='' class='filterpill badge badge-census m-1' id=\" +\n      boxes[i].id +\n      \" >\" +\n      boxes[i].value +\n      \"</span>\";\n    $(\"#filterPills\").append($pill);\n  }\n  filterSearch();\n});\n\n/**\n * Whenever an input onkeyup is in the searchbar or a checkbox is checked \n * (see above btn-group function), creates an array of all words in \n * the input and calls on searchText to show/hide cards that is \n * concatted with filter text written in above function. \n */\ndocument.getElementById(\"quicksearch\").onkeyup = filterSearch;\nfunction filterSearch() {\n  var input = document.getElementById(\"quicksearch\");\n  inputVal = input.value;\n  inputVal = inputVal.toLowerCase().trim();\n  inputArray = inputVal.split(\" \");\n  if (filter) { // filter shows up as \".classname1 .classname2 .classname3\"\n    $(\".card\").hide();\n    searchText(inputArray, $(filter));\n  } else {\n    searchText(inputArray, $(\".card\"));\n  }\n}\n\n/**\n * Filters and shows/hides checkboxes in a list. \n */\nfunction filterCheckbox(div, input) {\n  li = div.getElementsByTagName(\"li\");\n  filter = input.value.toUpperCase();\n  for (i = 0; i < li.length; i++) {\n    checkbox = li[i].innerHTML.replace(/<.*>/, \"\");\n    if (checkbox.toUpperCase().indexOf(filter) > -1) {\n      li[i].style.display = \"\";\n    } else {\n      li[i].style.display = \"none\";\n    }\n  }\n}\n\n/**\n * Calls on filterCheckbox to show/hide \n * filters in \"Subtopics\" based on user's input in the searchbar. \n */\ndocument.getElementById(\"topicsInput\").onkeyup = searchSubtopics;\nfunction searchSubtopics() {\n  input = document.getElementById(\"topicsInput\");\n  div = document.getElementById(\"subtopics\");\n  filterCheckbox(div, input);\n}\n\n/**\n * Shows all checkboxes inside the subtopic dropdown.  \n */\nfunction showCheckbox(div) {\n  li = div.getElementsByTagName(\"li\");\n  for (i = 0; i < li.length; i++) {\n    li[i].style.display = \"\";\n  }\n}\n\n/**\n * Resets the search input, filters selected, and pills\n * on the page and clears all previous selected.  \n */\ndocument.getElementById(\"uncheckAll\").onclick = uncheckAll;\nfunction uncheckAll() {\n  $(\"input[type='checkbox']:checked\").prop(\"checked\", false);\n  filter = \"\";\n  $(\"#filterPills\").empty();\n  div = document.getElementById(\"subtopics\");\n  document.getElementById(\"topicsInput\").value = \"\";\n  showCheckbox(div);\n  document.getElementById(\"quicksearch\").value = \"\";\n  filterSearch();\n}\n\n/**\n * Toggles view from card columns of three to horizontal layout. \n */\ndocument.getElementById(\"viewChange\").onclick = viewChange;\nfunction viewChange() {\n  var element = document.getElementById(\"cards\");\n  element.classList.toggle(\"card-columns\");\n}"]}